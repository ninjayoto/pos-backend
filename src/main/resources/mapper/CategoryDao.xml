<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.backend.dao.CategoryDao">

	<resultMap type='com.backend.domain.Category' id='categoryResult'>
		<id property='id' column='id' />
		<result property='name' column='name' />
		<result property='type' column='type' />
		<result property='state' column='state' />
		<result property='createdDate' column='createdDate' />
		<result property='createdBy' column='createdBy' />
		<result property='updatedDate' column='updatedDate' />
		<result property='updatedBy' column='updatedBy' />
	</resultMap>

	<select id="findById" resultType="com.backend.domain.Category">
		SELECT *FROM category WHERE id
		= #{id}
	</select>

	<select id="findByFields" parameterType="map" resultMap="categoryResult">
		SELECT *
		FROM category
		<if test="_parameter != null">
			<include refid="generic_where_clause_and" />
		</if>
	</select>

	<insert id="add" parameterType="com.backend.domain.Category"
		useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		INSERT INTO
		category
		(
		name,
		type,
		createdDate,
		createdBy
		)
		VALUES
		(
		#{name},
		#{type},
		#{createdDate},
		#{createdBy}
		)
	</insert>

	<update id="update" parameterType="com.backend.domain.Category">
		UPDATE category
		SET
		name =#{name},
		state = #{state},
		type = #{type},
		updatedDate = #{updatedDate},
		updatedBy = #{updatedBy}
		WHERE id = #{id}
	</update>

	<delete id="remove" parameterType="long">
		DELETE FROM category
		WHERE id =
		#{id}
	</delete>

	<select id="count" resultType="Integer">
		SELECT COUNT(*)
		FROM category
	</select>

	<select id="getAll" parameterType="map" resultMap='categoryResult'>
		SELECT *
		FROM
		category
		
	</select>

	<select id="getPageItems" parameterType="map" resultMap="categoryResult">
		SELECT *FROM category
		LIMIT #{limit} OFFSET
		<if test="offset != null">
			${offset}
		</if>
		<if test="offset == null">
			0
		</if>
	</select>

	<select id="getPageItemsWithFields" parameterType="map" resultMap="categoryResult">
		SELECT *FROM category
		<if test="_parameter != null">
			<include refid="generic_where_clause_and" />
		</if>
		<if test="sortBy != null">
			ORDER BY ${sortBy}
			<if test="isAscending == true">
				ASC
			</if>
			<if test="isAscending == false">
				DESC
			</if>
		</if>

		LIMIT #{limit} OFFSET
		<if test="offset != null">
			${offset}
		</if>
		<if test="offset == null">
			0
		</if>
	</select>

	<select id="countWithFilters" resultType="Integer">
		SELECT COUNT(*) FROM category
		<if test="_parameter != null">
			<include refid="generic_where_clause_and" />
		</if>
	</select>

	<sql id="generic_where_clause_and">
		<where>
			<trim prefixOverrides="AND ">
				<if test="domain.state != null">
					state=#{domain.state}
				</if>
			</trim>
		</where>
	</sql>
</mapper>